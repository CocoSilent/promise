{"version":3,"file":"promise.js","sources":["../src/type.ts","../src/promise.ts"],"sourcesContent":["export type OnFulfilled = (value?: any) => void\r\nexport type OnRejected  = (reason?: any) => void\r\nexport type Executor = (OnFulfilled, OnRejected) => void\r\n\r\nexport enum PromiseState {\r\n    'PENDING',\r\n    'FULLFILLED',\r\n    'REJECTED'\r\n}","import {Executor, OnFulfilled, OnRejected, PromiseState} from './type';\r\n\r\n// 异步任务，nodejs微任务  浏览器宏任务\r\nconst asyncTask = (fun: any) => {\r\n    if (process && process.nextTick) {\r\n        // microtask\r\n        process.nextTick(fun)\r\n    } else {\r\n        // macrotask\r\n        setTimeout(fun);\r\n    }\r\n}\r\n\r\nexport default class Promise {\r\n    private PromiseState: PromiseState;\r\n    private PromiseResult: any;\r\n    private readonly resolve: OnFulfilled\r\n    private readonly reject: OnRejected;\r\n    private readonly onFulfilledCallbacks:OnFulfilled[]  = [];\r\n    private readonly onRejectedCallbacks:OnRejected[] = [];\r\n    constructor(executor: Executor) {\r\n        this.PromiseState = PromiseState.PENDING;\r\n\r\n        this.resolve = function (value: any) {\r\n            // 状态不能重复改变\r\n            if (this.PromiseState === PromiseState.PENDING) {\r\n                asyncTask(() => {\r\n                    this.PromiseState = PromiseState.FULLFILLED;\r\n                    this.PromiseResult = value;\r\n                    this.onFulfilledCallbacks.forEach(callback => callback(this.PromiseResult));\r\n                })\r\n            }\r\n        }\r\n\r\n        this.reject = function (reason: any) {\r\n            // 状态不能重复改变\r\n            if (this.PromiseState === PromiseState.PENDING) {\r\n                asyncTask(() => {\r\n                    this.PromiseState = PromiseState.REJECTED;\r\n                    this.PromiseResult = reason;\r\n                    this.onRejectedCallbacks.forEach(callback => callback(this.PromiseResult));\r\n                })\r\n            }\r\n        }\r\n\r\n        try {\r\n            executor(this.resolve.bind(this), this.reject.bind(this));\r\n        } catch (e) {\r\n            this.reject(e);\r\n        }\r\n    }\r\n    then(onFulfilled: OnFulfilled, onRejected:OnRejected) {\r\n        const promise2 = new Promise((resolve, reject) => {\r\n            if (this.PromiseState === PromiseState.FULLFILLED) {\r\n                asyncTask(() => {\r\n                    try {\r\n                        const x = onFulfilled(this.PromiseResult);\r\n                        resolve(x);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                });\r\n            } else if (this.PromiseState === PromiseState.REJECTED) {\r\n                asyncTask(() => {\r\n                    try {\r\n                        const x = onRejected(this.PromiseResult);\r\n                        resolve(x);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                })\r\n            } else if (this.PromiseState === PromiseState.PENDING) {\r\n                this.onFulfilledCallbacks.push((value) => {\r\n                    asyncTask(() => {\r\n                        onFulfilled(value);\r\n                    })\r\n                });\r\n\r\n                this.onRejectedCallbacks.push((reason) => {\r\n                    asyncTask(() => {\r\n                        onFulfilled(reason);\r\n                    })\r\n                })\r\n            }\r\n        });\r\n        return promise2;\r\n    }\r\n}"],"names":[],"mappings":"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"}