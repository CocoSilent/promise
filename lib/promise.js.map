{"version":3,"file":"promise.js","sources":["../src/type2.ts","../src/promise2.ts"],"sourcesContent":["export type Resolve = (value?: any) => void;\r\nexport type Reject = (reson?: any) => void;\r\nexport type Executor = (resolve: Resolve, reject: Reject) => void;\r\nexport enum PromiseState {\r\n    'pending',\r\n    'fullfilled',\r\n    'rejected'\r\n}\r\n\r\nexport type Onfulfilled = (value?: any) => any;\r\nexport type Onrejected = (reason?: any) => any;\r\n","import {Executor, Onfulfilled, Onrejected, PromiseState, Reject, Resolve} from './type2';\r\n\r\nfunction asyncTask(callback:any) {\r\n    if (process && process.nextTick) {\r\n        process.nextTick(callback)\r\n    } else {\r\n        setTimeout(callback)\r\n    }\r\n}\r\n\r\nfunction resolvePromise(promise2:Promise, x: any, resolve:Resolve, reject: Reject) {\r\n    if (promise2 === x) {\r\n        reject(new TypeError('promise2 === x'))\r\n        return\r\n    } else if (x instanceof Promise) {\r\n        x.then((y) => {\r\n            resolvePromise(promise2, y, resolve, reject);\r\n        }, reject)\r\n        return\r\n    } else if (x && (typeof x === 'function' || typeof x === 'object')) {\r\n        let then;\r\n        try {\r\n            then = x.then;\r\n        } catch (e) {\r\n            reject(e);\r\n            return;\r\n        }\r\n        if (typeof then === 'function') {\r\n            let called = false;\r\n            try {\r\n                then.call(x, (y: any) => {\r\n                    if (called) {\r\n                        return\r\n                    }\r\n                    called = true;\r\n                    resolvePromise(promise2, y, resolve, reject);\r\n                }, (reason: any) => {\r\n                    if (called) {\r\n                        return\r\n                    }\r\n                    called = true;\r\n                    reject(reason);\r\n                });\r\n            } catch (e) {\r\n                if (called) {\r\n                    return\r\n                }\r\n                called = true;\r\n                reject(e);\r\n            }\r\n            return\r\n        }\r\n    }\r\n    resolve(x);\r\n}\r\n\r\nexport default class Promise {\r\n    private promiseState: PromiseState;\r\n    private promiseResult: any;\r\n    private resolve: Resolve;\r\n    private reject: Reject;\r\n    private onfulfilledList: Onfulfilled[];\r\n    private onrejectedList: Onrejected[];\r\n\r\n    constructor(executor:Executor) {\r\n        this.promiseState = PromiseState.pending;\r\n        this.promiseResult = undefined;\r\n        this.onfulfilledList = [];\r\n        this.onrejectedList = [];\r\n        this.resolve = (value?: any) => {\r\n            if (this.promiseState !== PromiseState.pending) {\r\n                return\r\n            }\r\n            this.promiseState = PromiseState.fullfilled;\r\n            this.promiseResult = value;\r\n            for (let i=0; i<this.onfulfilledList.length;i++) {\r\n                const cb = this.onfulfilledList[i];\r\n                cb(value);\r\n            }\r\n        }\r\n        this.reject = (reson?: any) => {\r\n            if (this.promiseState !== PromiseState.pending) {\r\n                return\r\n            }\r\n            this.promiseState = PromiseState.rejected;\r\n            this.promiseResult = reson;\r\n            for (let i=0; i<this.onrejectedList.length;i++) {\r\n                const cb = this.onrejectedList[i];\r\n                cb(reson);\r\n            }\r\n        }\r\n        try {\r\n            executor(this.resolve, this.reject);\r\n        } catch (e) {\r\n            this.reject(e)\r\n        }\r\n    }\r\n\r\n    then(onfulfilled?:Onfulfilled, onrejected?:Onrejected) {\r\n        if (!onfulfilled || typeof onfulfilled !== 'function') {\r\n            onfulfilled = (value) => value;\r\n        }\r\n        if (!onrejected || typeof onrejected !== 'function') {\r\n            onrejected = (reason) => {\r\n                throw reason;\r\n            };\r\n        }\r\n        if (this.promiseState === PromiseState.fullfilled) {\r\n            const promise2 = new Promise((resolve, reject) => {\r\n                asyncTask(() => {\r\n                    try {\r\n                        const result = onfulfilled?.(this.promiseResult);\r\n                        resolvePromise(promise2, result, resolve, reject);\r\n                    } catch (e) {\r\n                        reject(e)\r\n                    }\r\n                })\r\n            })\r\n            return promise2;\r\n        }\r\n        if (this.promiseState === PromiseState.rejected) {\r\n            const promise2 = new Promise((resolve, reject) => {\r\n                asyncTask(() => {\r\n                    try {\r\n                        const result = onrejected?.(this.promiseResult);\r\n                        resolvePromise(promise2, result, resolve, reject);\r\n                    } catch (e) {\r\n                        reject(e)\r\n                    }\r\n                })\r\n            })\r\n            return promise2;\r\n        }\r\n        if (this.promiseState === PromiseState.pending) {\r\n            const promise2 = new Promise((resolve, reject) => {\r\n                this.onfulfilledList.push(() => {\r\n                    asyncTask(() => {\r\n                        try {\r\n                            const result = onfulfilled?.(this.promiseResult);\r\n                            resolvePromise(promise2, result, resolve, reject);\r\n                        } catch (e) {\r\n                            reject(e)\r\n                        }\r\n                    });\r\n                });\r\n                this.onrejectedList.push(() => {\r\n                    asyncTask(() => {\r\n                        try {\r\n                            const result = onrejected?.(this.promiseResult);\r\n                            resolvePromise(promise2, result, resolve, reject);\r\n                        } catch (e) {\r\n                            reject(e)\r\n                        }\r\n                    });\r\n                });\r\n            })\r\n            return promise2;\r\n        }\r\n    }\r\n}\r\n"],"names":["Promise"],"mappings":";;;;;;IAGA,IAAY,YAIX;IAJD,WAAY,YAAY;QACpB,qDAAS,CAAA;QACT,2DAAY,CAAA;QACZ,uDAAU,CAAA;IACd,CAAC,EAJW,YAAY,KAAZ,YAAY;;ICDxB,SAAS,SAAS,CAAC,QAAY;QAC3B,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE;YAC7B,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;SAC7B;aAAM;YACH,UAAU,CAAC,QAAQ,CAAC,CAAA;SACvB;IACL,CAAC;IAED,SAAS,cAAc,CAAC,QAAgB,EAAE,CAAM,EAAE,OAAe,EAAE,MAAc;QAC7E,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChB,MAAM,CAAC,IAAI,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAA;YACvC,OAAM;SACT;aAAM,IAAI,CAAC,YAAYA,SAAO,EAAE;YAC7B,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC;gBACL,cAAc,CAAC,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;aAChD,EAAE,MAAM,CAAC,CAAA;YACV,OAAM;SACT;aAAM,IAAI,CAAC,KAAK,OAAO,CAAC,KAAK,UAAU,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC,EAAE;YAChE,IAAI,IAAI,SAAA,CAAC;YACT,IAAI;gBACA,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;aACjB;YAAC,OAAO,CAAC,EAAE;gBACR,MAAM,CAAC,CAAC,CAAC,CAAC;gBACV,OAAO;aACV;YACD,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;gBAC5B,IAAI,QAAM,GAAG,KAAK,CAAC;gBACnB,IAAI;oBACA,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,UAAC,CAAM;wBAChB,IAAI,QAAM,EAAE;4BACR,OAAM;yBACT;wBACD,QAAM,GAAG,IAAI,CAAC;wBACd,cAAc,CAAC,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;qBAChD,EAAE,UAAC,MAAW;wBACX,IAAI,QAAM,EAAE;4BACR,OAAM;yBACT;wBACD,QAAM,GAAG,IAAI,CAAC;wBACd,MAAM,CAAC,MAAM,CAAC,CAAC;qBAClB,CAAC,CAAC;iBACN;gBAAC,OAAO,CAAC,EAAE;oBACR,IAAI,QAAM,EAAE;wBACR,OAAM;qBACT;oBACD,QAAM,GAAG,IAAI,CAAC;oBACd,MAAM,CAAC,CAAC,CAAC,CAAC;iBACb;gBACD,OAAM;aACT;SACJ;QACD,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC;;QAUG,iBAAY,QAAiB;YAA7B,iBAgCC;YA/BG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,UAAC,KAAW;gBACvB,IAAI,KAAI,CAAC,YAAY,KAAK,YAAY,CAAC,OAAO,EAAE;oBAC5C,OAAM;iBACT;gBACD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC5C,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,eAAe,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;oBAC7C,IAAM,EAAE,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBACnC,EAAE,CAAC,KAAK,CAAC,CAAC;iBACb;aACJ,CAAA;YACD,IAAI,CAAC,MAAM,GAAG,UAAC,KAAW;gBACtB,IAAI,KAAI,CAAC,YAAY,KAAK,YAAY,CAAC,OAAO,EAAE;oBAC5C,OAAM;iBACT;gBACD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC1C,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,cAAc,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;oBAC5C,IAAM,EAAE,GAAG,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;oBAClC,EAAE,CAAC,KAAK,CAAC,CAAC;iBACb;aACJ,CAAA;YACD,IAAI;gBACA,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aACvC;YAAC,OAAO,CAAC,EAAE;gBACR,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;aACjB;SACJ;QAED,sBAAI,GAAJ,UAAK,WAAwB,EAAE,UAAsB;YAArD,iBA4DC;YA3DG,IAAI,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;gBACnD,WAAW,GAAG,UAAC,KAAK,IAAK,OAAA,KAAK,GAAA,CAAC;aAClC;YACD,IAAI,CAAC,UAAU,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;gBACjD,UAAU,GAAG,UAAC,MAAM;oBAChB,MAAM,MAAM,CAAC;iBAChB,CAAC;aACL;YACD,IAAI,IAAI,CAAC,YAAY,KAAK,YAAY,CAAC,UAAU,EAAE;gBAC/C,IAAM,UAAQ,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBACzC,SAAS,CAAC;wBACN,IAAI;4BACA,IAAM,MAAM,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAG,KAAI,CAAC,aAAa,CAAC,CAAC;4BACjD,cAAc,CAAC,UAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;yBACrD;wBAAC,OAAO,CAAC,EAAE;4BACR,MAAM,CAAC,CAAC,CAAC,CAAA;yBACZ;qBACJ,CAAC,CAAA;iBACL,CAAC,CAAA;gBACF,OAAO,UAAQ,CAAC;aACnB;YACD,IAAI,IAAI,CAAC,YAAY,KAAK,YAAY,CAAC,QAAQ,EAAE;gBAC7C,IAAM,UAAQ,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBACzC,SAAS,CAAC;wBACN,IAAI;4BACA,IAAM,MAAM,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAG,KAAI,CAAC,aAAa,CAAC,CAAC;4BAChD,cAAc,CAAC,UAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;yBACrD;wBAAC,OAAO,CAAC,EAAE;4BACR,MAAM,CAAC,CAAC,CAAC,CAAA;yBACZ;qBACJ,CAAC,CAAA;iBACL,CAAC,CAAA;gBACF,OAAO,UAAQ,CAAC;aACnB;YACD,IAAI,IAAI,CAAC,YAAY,KAAK,YAAY,CAAC,OAAO,EAAE;gBAC5C,IAAM,UAAQ,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBACzC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC;wBACtB,SAAS,CAAC;4BACN,IAAI;gCACA,IAAM,MAAM,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAG,KAAI,CAAC,aAAa,CAAC,CAAC;gCACjD,cAAc,CAAC,UAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;6BACrD;4BAAC,OAAO,CAAC,EAAE;gCACR,MAAM,CAAC,CAAC,CAAC,CAAA;6BACZ;yBACJ,CAAC,CAAC;qBACN,CAAC,CAAC;oBACH,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;wBACrB,SAAS,CAAC;4BACN,IAAI;gCACA,IAAM,MAAM,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAG,KAAI,CAAC,aAAa,CAAC,CAAC;gCAChD,cAAc,CAAC,UAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;6BACrD;4BAAC,OAAO,CAAC,EAAE;gCACR,MAAM,CAAC,CAAC,CAAC,CAAA;6BACZ;yBACJ,CAAC,CAAC;qBACN,CAAC,CAAC;iBACN,CAAC,CAAA;gBACF,OAAO,UAAQ,CAAC;aACnB;SACJ;QACL,cAAC;IAAD,CAAC;;;;;;;;"}